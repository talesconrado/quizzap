//
//  QuizInteractorTests.swift
//  QuizZap
//
//  Created by Tales Conrado on 03/02/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import QuizZap
import XCTest

class QuizInteractorTests: XCTestCase {
    // MARK: Subject under test

    var sut: QuizInteractor!

    // MARK: Test lifecycle
  
    override func setUp() {
        super.setUp()
        setupQuizInteractor()
    }

    override func tearDown() {
        super.tearDown()
    }
  
    // MARK: Test setup

    func setupQuizInteractor() {
        let worker = QuizAPIWorker()
        sut = QuizInteractor(worker: worker)
    }

    // MARK: Test doubles

    class QuizPresentationLogicSpy: QuizPresentationLogic {
        
        var loadQuestionsCalled = false
        var quizEndedCalled = false

        func quizEnded(score: Int, total: Int) {
            quizEndedCalled = true
        }
        
        func didLoadQuestions(response: Quiz.Response) {
            loadQuestionsCalled = true
        }
        
    }

    // MARK: Tests

    func testQuizEndedCalled() {
        let spy = QuizPresentationLogicSpy()
        sut.presenter = spy
        
        sut.getNextQuestion()
        
        XCTAssertTrue(spy.quizEndedCalled)
    }
    
    func testLoadQuestionsAndTheNextOne() {
        // Given
        sut.difficultyLevel = .easy
        sut.numberOfQuestions = 10
        
        let spy = QuizPresentationLogicSpy()
        sut.presenter = spy
        
        // When
        sut.loadQuestions()
        
        let fulfilling = expectation(description: "load")
        
        // Then
        DispatchQueue.main.asyncAfter(deadline: .now() + 10) {
            self.sut.getNextQuestion()
            fulfilling.fulfill()
        }
        
        waitForExpectations(timeout: 10, handler: nil)
        XCTAssertNotNil(self.sut.questionsList)
        XCTAssertTrue(spy.loadQuestionsCalled)
    }
}
